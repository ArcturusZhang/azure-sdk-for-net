// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Health.Deidentification.Models
{
    /// <summary> Storage location. </summary>
    public partial class TargetStorageLocation
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        internal TargetStorageLocation(Uri location, string prefix)
        {
            Location = location;
            Prefix = prefix;
        }

        internal TargetStorageLocation(Uri location, string prefix, bool? overwrite, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Location = location;
            Prefix = prefix;
            Overwrite = overwrite;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> URL to storage location. </summary>
        public Uri Location { get; }

        /// <summary>
        /// Replaces the input prefix of a file path with the output prefix, preserving the rest of the path structure.
        /// 
        /// Example:
        /// File full path: documents/user/note.txt
        /// Input Prefix: "documents/user/"
        /// Output Prefix: "output_docs/"
        /// 
        /// Output file: "output_docs/note.txt"
        /// </summary>
        public string Prefix { get; }

        /// <summary> When set to true during a job, the service will overwrite the output location if it already exists. </summary>
        public bool? Overwrite { get; }
    }
}
