// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.BotService.Models
{
    internal static partial class BotChannelNameExtensions
    {
        public static string ToSerialString(this BotChannelName value) => value switch
        {
            BotChannelName.AlexaChannel => "AlexaChannel",
            BotChannelName.FacebookChannel => "FacebookChannel",
            BotChannelName.EmailChannel => "EmailChannel",
            BotChannelName.KikChannel => "KikChannel",
            BotChannelName.TelegramChannel => "TelegramChannel",
            BotChannelName.SlackChannel => "SlackChannel",
            BotChannelName.MsTeamsChannel => "MsTeamsChannel",
            BotChannelName.SkypeChannel => "SkypeChannel",
            BotChannelName.WebChatChannel => "WebChatChannel",
            BotChannelName.DirectLineChannel => "DirectLineChannel",
            BotChannelName.SmsChannel => "SmsChannel",
            BotChannelName.LineChannel => "LineChannel",
            BotChannelName.DirectLineSpeechChannel => "DirectLineSpeechChannel",
            BotChannelName.OutlookChannel => "OutlookChannel",
            BotChannelName.Omnichannel => "Omnichannel",
            BotChannelName.TelephonyChannel => "TelephonyChannel",
            BotChannelName.AcsChatChannel => "AcsChatChannel",
            BotChannelName.SearchAssistant => "SearchAssistant",
            BotChannelName.M365Extensions => "M365Extensions",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown BotChannelName value.")
        };

        public static BotChannelName ToBotChannelName(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "AlexaChannel")) return BotChannelName.AlexaChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "FacebookChannel")) return BotChannelName.FacebookChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "EmailChannel")) return BotChannelName.EmailChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "KikChannel")) return BotChannelName.KikChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "TelegramChannel")) return BotChannelName.TelegramChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "SlackChannel")) return BotChannelName.SlackChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "MsTeamsChannel")) return BotChannelName.MsTeamsChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "SkypeChannel")) return BotChannelName.SkypeChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "WebChatChannel")) return BotChannelName.WebChatChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "DirectLineChannel")) return BotChannelName.DirectLineChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "SmsChannel")) return BotChannelName.SmsChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "LineChannel")) return BotChannelName.LineChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "DirectLineSpeechChannel")) return BotChannelName.DirectLineSpeechChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "OutlookChannel")) return BotChannelName.OutlookChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Omnichannel")) return BotChannelName.Omnichannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "TelephonyChannel")) return BotChannelName.TelephonyChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "AcsChatChannel")) return BotChannelName.AcsChatChannel;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "SearchAssistant")) return BotChannelName.SearchAssistant;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "M365Extensions")) return BotChannelName.M365Extensions;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown BotChannelName value.");
        }
    }
}
